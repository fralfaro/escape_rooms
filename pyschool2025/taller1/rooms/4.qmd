---
title: "Habitación 4"
---

<center>
<img src="./img/sala_07.png" width="650">
</center>

<br/>

Desde el módulo de control se detectan múltiples objetos orbitando alrededor de la estación espacial ⚠️.  
Es urgente analizar sus coordenadas para prevenir colisiones 🌌💥.  

🚀 Tu misión es **ordenar las coordenadas** y extraer tres datos clave:

1. El objeto **más cercano** a la estación.  
2. El objeto **más lejano**.  
3. El objeto que queda en el **centro de la lista** (una vez ordenada).  

<div class="alert alert-info">
**Instrucción:**  
Utiliza la función `sorted()` para ordenar la lista y selecciona los elementos necesarios a través de sus índices.
</div>

::: {.callout-tip title="Acceder a elementos de una lista" collapse="true"}
Para acceder a un elemento se neceita indicar su índice, los índices comienzan desde el valor **0** hasta **n-1** dónde **n** igual a cantidad de elementos de la lista.

En Python los indices pueden ser también negativos `-1, -2, -3, ..., -n` pero estos se cuentan de derecha a izquierda.


teniendo la siguiente lista lista = [1, 2, 3, 4, 5, 6]

índices positivos:

* 0 para obtener 1
* 2 para obtener 3
* 3 para obtener 4

índices negativos:

* -6 para obtener 1
* -3 para obtener 4
* -1 para obtener 6

Ejemplo
```python 
lista = [1, 2, 3, 4]
lista[0] # Obtiene valor 1
lista[3] # Obtiene valor 3
lista[-3] # Obtiene valor 2
```
:::

::: {.callout-tip title="Pista" collapse="true"}
👉 El valor del **centro** depende de la cantidad de elementos en la lista:

- Si la lista tiene **largo impar**: es el valor que queda exactamente al medio.  
- Si la lista tiene **largo par**: se toma el promedio de los dos valores centrales (como número entero).

Ejemplo para lista con largo impar:
```python
largo = len(lista)
valor_centro = lista[largo // 2]
````

ℹ️ La operación `//2` realiza una **división entera**, es decir, conserva solo la parte entera del resultado (`7//2 = 3`).
:::

```{pyodide-python}
coordenadas = [540, 320, 890, 150, 430, 270]

# Ordenar la lista de coordenadas
ordenadas = None
print("Lista ordenada:", ordenadas)

# Obtener el objeto más cercano (primer elemento)
mas_cercano = ordenadas[None]

# Obtener el objeto más lejano (último elemento)
mas_lejano = ordenadas[None]

# Calcular el centro de la lista
centro = (ordenadas[None]+ordenadas[None])/2

# Crear la lista final con los tres valores
respuesta = [mas_cercano, centro, mas_lejano]
print("Respuesta final:", respuesta)

# Verifica la respuesta
import verificar
verificar.salon_4(respuesta)
```

